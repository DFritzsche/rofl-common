//
// Doxygen group definition
//

//Core API
/**
*
* @defgroup core Data-model core APIs and data structures
* @brief The data-model core APIs and data structures present a unified data-model of a dataplane.
*
* The core APIs expose the initiliazers/destructors and the data structures used by the core library and by the other APIs (exposed and consumed). Only the documented structures and APIs should be used by the user library.
*
* @defgroup core_of1x OpenFlow v1.x (1.0, 1.2 and 1.3.2) data-model core APIs and data structures
* @brief OpenFlow v1.x (1.0, 1.2 and 1.3.2) data-model core APIs and data structures used both internally and for data exchanging (\ref mgmt) with the library user.
* @ingroup core 
*
* @defgroup core_monitoring Generalized monitoring framework data-model core APIs and data structures
* @brief Generalized monitoring framework data-model core APIs and data structures
* @ingroup core 
*/

//Matching algorithms API
/**
* @defgroup core_ma Extensible OpenFlow software matching algorithm APIs 
* @brief APIs to extend ROFL-pipeline with new (software/hybrid) OpenFlow table matching algorithms. 
* @ingroup core
*
* @defgroup core_ma_of1x Extensible OpenFlow v1.x (1.0, 1.2 and 1.3.2) software matching algorithm API 
* @brief API to extend ROFL-pipeline with new (software/hybrid) OpenFlow v1.x (1.0, 1.2 and 1.3.2) table matching algorithms. 
* @ingroup core_ma
* Defines the set of APIs or interfaces to extend core library with new software/hybrid matching algorithms for OpenFlow versions 1.0, 1.2 and 1.3.2 within the table matching process.
*
*/

//Packet processing API
/**
*
* @defgroup core_pp Software Packet Processing (pp) APIs
* @brief APIs used to process packets in software pipelines (software and hybrid software/hardware switches) 
*
* Only the documented structures and APIs should be used by the user library.
*/


//Mgmt
/**
*
* @defgroup mgmt State managment API
* @brief Mananagement of the system's/device state (physical switch), including logical switches and ports. 
*
* Exposes the api for managing so-called physical switch (the platform), including logical switches and platform ports.
*
*
* This is roughly:
*  - Device ports (network interface)
*    - Port statistics
*  - Logical switch creation and destruction
*  - Attachement of ports to logical switches
*
*/

//OpenFlow APIs

/**
* @defgroup async_events_hooks OpenFlow asynchronous events and hooks APIs 
* @brief APIs that library consumes to communicate asynchronous events (as well as some other hooks) to the endpoint or an intermediate layer; must be implemented by the library users.
* @ingroup mgmt 
*
*
* @defgroup async_events_hooks_of1x OpenFlow v1.x events and hooks APIs
* @brief OpenFlow versions 1.0, 1.2 and 1.3.2 asynchronous events and hooks APIs
* @ingroup async_events_hooks 
*
*/

//Platform APIs

/**
* @defgroup platform Platform APIs 
* @brief Platform APIs is a group of APIs which are used by the library but its implementation is platform specific. 
* 
* Platform APIs is the group of APIs that are used internally in the library, but its implementation is
* platform specific. Examples are memory management and locking. The user of the library MUST implement all the
* platform APIs.
* 
* @defgroup platform_lock Locking API
* @brief Locking (mutex, rwlock) API definition, that must be implemented by the library users
* @ingroup platform 
*
* @defgroup platform_atomic Atomic Operations API
* @brief Atomic operations (atomic add, inc...) API definition, that must be implemented by the library users
* @ingroup platform 
*
*
* @defgroup platform_memory Memory API
* @brief Memory management API definition (malloc, free..), that must be implemented by the library users.
* @ingroup platform
*
* @defgroup platform_packet Packet Mangling API
* @brief Packet Mangling API is in charge of packet manipulation and must be implemented by the library users
* @ingroup platform
* @ingroup core_pp 
*
* @defgroup platform_timing System Time API
* @brief System time API is in charge of providing the pipeline with the time, used for statistics and flow expirations. Must be implemented by the library users
* @ingroup platform
*/
